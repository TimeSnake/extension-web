repositories {
    mavenLocal()
    maven {
        url = uri 'https://papermc.io/repo/repository/maven-public/'
    }
    maven {
        url = uri('https://oss.sonatype.org/content/repositories/snapshots')
    }
    maven {
        url = uri 'https://repo.maven.apache.org/maven2/'
    }
    mavenCentral()
}

dependencies {
    implementation 'org.mariadb.jdbc:mariadb-java-client:3.0.6'

    compileOnly project(':basic-proxy')

    compileOnly project(':database-proxy')
    compileOnly project(':database-api')

    compileOnly project(':channel-proxy')
    compileOnly project(':channel-api')

    compileOnly project(':library-extension')
    compileOnly project(':library-basic')

    compileOnly project.velocity
    annotationProcessor project.velocity
}

group = project.group
version = '1.0-SNAPSHOT'
archivesBaseName = 'extension-web'

task buildFatJar(type: Jar) {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    baseName = archivesBaseName
    classifier = "all"
    from { configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}


task deleteOldPluginJar(type: Delete) {
    delete fileTree(dir: "${project.plugins_dir}", include: "**/${archivesBaseName}-*.jar")
    onlyIf {
        !jar.state.upToDate
    }
}

task copyJarToPlugins(type: Copy) {
    from "build/libs/" + archivesBaseName + "-" + version + "-all" + ".jar"
    into project.plugins_dir
}

jar.finalizedBy(buildFatJar)
copyJarToPlugins.dependsOn(buildFatJar)
copyJarToPlugins.dependsOn(deleteOldPluginJar)
jar.finalizedBy(copyJarToPlugins)